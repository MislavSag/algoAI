- model: random_forest
  description: Random forest model
  operations:
    train:
      description: Trainer for random forest  
      main: trademl.modeling.random_forest.train_rf  # Python module when running the operation
      # flags-dest: globals  #alternative is to use argparse module, see https://www-pre.guild.ai/reference/defaults/
      flagsâ€‘import: all
      flags:
        std_outlier:
          arg_name: std_outlier
          description: Standard devaition threshold. Remove observations from X above/below std_oulier
          min: 2
          max: 20
        tb_volatility_scaler:
          arg_name: tb_volatility_scaler
          description: Scalar which multiplies daily_vol to make sampling more/less frequent
          min: 0.1
          max: 3.0
        max_depth:
          description: Maximum depth for the tree in random forest algorithm
          arg_name: max_depth
          min: 1
          max: 10
        labeling_technique:
          description: Labeling technique to use for classification
          arg_name: labeling_technique
          type: string
          default: 'triple_barrier'
          choices: ['triple_barrier','trend_scanning']
        sample_weights_type:
          description: Sample weights to use.
          arg_name: sample_weights_type          
        tb_volatility_lookback:
          description: Number of days in the past for calculating daily volatility
          arg_name: tb_volatility_lookback
          min: 1
          max: 1000000
        tb_triplebar_num_days:
          description: Number of days for defining vertical bars
          arg_name: tb_triplebar_num_days
          min: 1
          max: 1000
        tb_triplebar_min_ret:
          description: minimal return for barrier to be used in the sample
          arg_name: tb_triplebar_min_ret
          min: 0.001
          max: 0.1
        sample_weights_type:
          description: Sample weights to use in training
          arg_name: sample_weights_type
          type: string
          default: 'returns'
          choices: ['returns','time_decay']


